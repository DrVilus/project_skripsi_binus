@startuml
left to right direction
set namespaceSeparator ::

class "project_skripsi::Functions::compatibility_check_functions.dart::CompatibilityCheckFunctions" {
  +bool handlePcieCompatibility()
  +bool handlePcieCompatibilityWithJson()
}

class "project_skripsi::Functions::currency_format.dart::CurrencyFormat" {
  {static} +String convertToIdr()
}

class "project_skripsi::Functions::generic_ui_functions.dart::GenericUIFunctions" {
  {static} +SnackBar snackBar()
  {static} +void countInputModalBottomSheetRam()
}

class "project_skripsi::main.dart::MyApp" {
  +ValueNotifier<GraphQLClient> client
  +Widget build()
}

"project_skripsi::main.dart::MyApp" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<GraphQLClient>"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "project_skripsi::main.dart::MyApp"

class "project_skripsi::main.dart::MyHomePage" {
  +State<MyHomePage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "project_skripsi::main.dart::MyHomePage"

class "project_skripsi::main.dart::_MyHomePageState" {
  +void initState()
  +void executeAfterBuild()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "project_skripsi::main.dart::_MyHomePageState"

class "project_skripsi::Models::build_guide_model.dart::BuildGuideModel" {
  +String guideTitle
  +String guideDescription
  +String guideImageLink
}

class "project_skripsi::Models::build_guide_model.dart::BuildGuideModelListWithTitle" {
  +String guideTitle
  +List<dynamic> guideList
}

class "project_skripsi::Models::parts_select_model.dart::PartsSelectModel" {
  +String name
  +String assetPath
  +PartEnum partEnumVariable
  +String query
  +String queryById
}

"project_skripsi::Models::parts_select_model.dart::PartsSelectModel" o-- "project_skripsi::Variables::global_variables.dart::PartEnum"

class "project_skripsi::Models::recommendation_models.dart::CpuMotherboardPair" {
  +Map<String, dynamic>? cpuData
  +Map<String, dynamic>? motherboardData
  +num price
}

class "project_skripsi::Models::recommendation_models.dart::GpuPsuPair" {
  +Map<String, dynamic>? gpuData
  +Map<String, dynamic>? psuData
  +num price
}

class "project_skripsi::Models::recommendation_models.dart::FullPcPartModel" {
  +CpuMotherboardPair cpuMotherboardPair
  +GpuPsuPair gpuPsuPair
  +Map<String, dynamic>? storageData
  +Map<String, dynamic>? ramData
  +int ramCount
  +Map<String, dynamic>? coolerData
  +Map<String, dynamic>? caseData
  +num price
}

"project_skripsi::Models::recommendation_models.dart::FullPcPartModel" o-- "project_skripsi::Models::recommendation_models.dart::CpuMotherboardPair"
"project_skripsi::Models::recommendation_models.dart::FullPcPartModel" o-- "project_skripsi::Models::recommendation_models.dart::GpuPsuPair"

class "project_skripsi::Pages::BuildGuide::build_guide_description_page.dart::BuildGuideDescriptionPage" {
  +BuildGuideModel buildGuideModel
  +Widget build()
}

"project_skripsi::Pages::BuildGuide::build_guide_description_page.dart::BuildGuideDescriptionPage" o-- "project_skripsi::Models::build_guide_model.dart::BuildGuideModel"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "project_skripsi::Pages::BuildGuide::build_guide_description_page.dart::BuildGuideDescriptionPage"

class "project_skripsi::Pages::BuildGuide::build_guide_list_page.dart::BuildGuideListPage" {
  +BuildGuideModelListWithTitle buildGuideModelListWithTitle
  +State<BuildGuideListPage> createState()
}

"project_skripsi::Pages::BuildGuide::build_guide_list_page.dart::BuildGuideListPage" o-- "project_skripsi::Models::build_guide_model.dart::BuildGuideModelListWithTitle"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "project_skripsi::Pages::BuildGuide::build_guide_list_page.dart::BuildGuideListPage"

class "project_skripsi::Pages::BuildGuide::build_guide_list_page.dart::_BuildGuideListPageState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "project_skripsi::Pages::BuildGuide::build_guide_list_page.dart::_BuildGuideListPageState"

class "project_skripsi::Pages::BuildGuide::build_guide_variables_page.dart::BuildGuideVariablePage" {
  {static} +BuildGuideModelListWithTitle buildGuideMainList
  {static} +List<dynamic> buildGuideList
}

"project_skripsi::Pages::BuildGuide::build_guide_variables_page.dart::BuildGuideVariablePage" o-- "project_skripsi::Models::build_guide_model.dart::BuildGuideModelListWithTitle"

class "project_skripsi::Pages::BuildSchema::build_schema_page.dart::BuildSchemaPage" {
  +FullPcPartModel? fullPcPartModelList
  +State<BuildSchemaPage> createState()
}

"project_skripsi::Pages::BuildSchema::build_schema_page.dart::BuildSchemaPage" o-- "project_skripsi::Models::recommendation_models.dart::FullPcPartModel"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "project_skripsi::Pages::BuildSchema::build_schema_page.dart::BuildSchemaPage"

class "project_skripsi::Pages::BuildSchema::build_schema_page.dart::_BuildSchemaPageState" {
  +BuildSchemaStateModel buildSchemaStateModel
  +ColorFilter disabledColor
  +ColorFilter enabledColor
  -void _goToPartInfoPage()
  -void _goToPartModelListPage()
  +void initState()
  +Widget build()
}

"project_skripsi::Pages::BuildSchema::build_schema_page.dart::_BuildSchemaPageState" o-- "project_skripsi::Pages::BuildSchema::build_schema_state_model.dart::BuildSchemaStateModel"
"project_skripsi::Pages::BuildSchema::build_schema_page.dart::_BuildSchemaPageState" o-- "dart::ui::ColorFilter"
"flutter::src::widgets::framework.dart::State" <|-- "project_skripsi::Pages::BuildSchema::build_schema_page.dart::_BuildSchemaPageState"

class "project_skripsi::Pages::BuildSchema::build_schema_state_model.dart::BuildSchemaStateModel" {
  -int _currentSidebarState
  -bool _currentSidebarToggle
  -bool _currentEstimatedPriceWidgetToggle
  -PartEnum _currentSelectedPartEnum
  -String _currentSelectedPartModelId
  -TextEditingController _textEditingController
  -List<dynamic> _currentSelectedMotherboard
  -List<dynamic> _currentSelectedCPU
  -List<dynamic> _currentSelectedGPU
  -List<dynamic> _currentSelectedRAM
  +int currentSelectedRAMCount
  -List<dynamic> _currentSelectedPSU
  -List<dynamic> _currentSelectedCooler
  -List<dynamic> _currentSelectedStorage
  -List<dynamic> _currentSelectedCase
  +int sidebarState
  +bool sidebarToggle
  +bool estimatedPriceWidgetToggle
  +PartEnum selectedPartEnum
  +String selectedPartModelId
  +TextEditingController textEditingController
  +List<dynamic> selectedMotherboard
  +List<dynamic> selectedCPU
  +List<dynamic> selectedGPU
  +List<dynamic> selectedRAM
  +List<dynamic> selectedPSU
  +List<dynamic> selectedCooler
  +List<dynamic> selectedStorage
  +List<dynamic> selectedCase
  +void changeSidebarState()
  +void changeSidebarToggle()
  +void changeEstimatedPriceWidgetToggle()
  +void changeSelectedPartEnum()
  +void changeSelectedPartModelId()
  +void changeBuildName()
  +String changeSelectedMotherboard()
  +void clearSelectedMotherboard()
  +String changeSelectedCPU()
  +void clearSelectedCPU()
  +String changeSelectedGPU()
  +void clearSelectedGPU()
  +String changeSelectedRAM()
  +void clearSelectedRAM()
  +void changeSelectedRAMCount()
  +String changeSelectedPSU()
  +void clearSelectedPSU()
  +String changeSelectedCooler()
  +void clearSelectedCooler()
  +String changeSelectedStorage()
  +void clearSelectedStorage()
  +String changeSelectedCase()
  +void clearSelectedCase()
  +String changePart()
  +void removePart()
  +String checkPartChosenId()
  +String checkPartChosenName()
  +double calculatePrice()
}

"project_skripsi::Pages::BuildSchema::build_schema_state_model.dart::BuildSchemaStateModel" o-- "project_skripsi::Variables::global_variables.dart::PartEnum"
"project_skripsi::Pages::BuildSchema::build_schema_state_model.dart::BuildSchemaStateModel" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"flutter::src::foundation::change_notifier.dart::ChangeNotifier" <|-- "project_skripsi::Pages::BuildSchema::build_schema_state_model.dart::BuildSchemaStateModel"

class "project_skripsi::Pages::BuildSchema::choose_parts_model_widget.dart::ChoosePartsModelWidget" {
  +Function toggleSideBar
  +PartEnum partEnum
  +State<ChoosePartsModelWidget> createState()
}

"project_skripsi::Pages::BuildSchema::choose_parts_model_widget.dart::ChoosePartsModelWidget" o-- "project_skripsi::Variables::global_variables.dart::PartEnum"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "project_skripsi::Pages::BuildSchema::choose_parts_model_widget.dart::ChoosePartsModelWidget"

class "project_skripsi::Pages::BuildSchema::choose_parts_model_widget.dart::_ChoosePartsModelWidgetState" {
  -int _compatibleIndexLength
  -num _getLowestPrice()
  -Future<List<dynamic>> _getPartData()
  -void _addPart()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "project_skripsi::Pages::BuildSchema::choose_parts_model_widget.dart::_ChoosePartsModelWidgetState"

class "project_skripsi::Pages::BuildSchema::choose_parts_model_widget.dart::WidgetBackgroundPainter" {
  +void paint()
  +bool shouldRepaint()
}

"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "project_skripsi::Pages::BuildSchema::choose_parts_model_widget.dart::WidgetBackgroundPainter"

class "project_skripsi::Pages::BuildSchema::choose_parts_model_widget.dart::LinePainter" {
  +void paint()
  +bool shouldRepaint()
}

"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "project_skripsi::Pages::BuildSchema::choose_parts_model_widget.dart::LinePainter"

class "project_skripsi::Pages::BuildSchema::choose_parts_model_widget.dart::ArrowPainter" {
  +void paint()
  +bool shouldRepaint()
}

"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "project_skripsi::Pages::BuildSchema::choose_parts_model_widget.dart::ArrowPainter"

class "project_skripsi::Pages::BuildSchema::choose_parts_widget.dart::ChoosePartsWidget" {
  +Function toggleSideBar
  +State<ChoosePartsWidget> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "project_skripsi::Pages::BuildSchema::choose_parts_widget.dart::ChoosePartsWidget"

class "project_skripsi::Pages::BuildSchema::choose_parts_widget.dart::_ChoosePartsWidgetState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "project_skripsi::Pages::BuildSchema::choose_parts_widget.dart::_ChoosePartsWidgetState"

class "project_skripsi::Pages::BuildSchema::choose_parts_widget.dart::WidgetBackgroundPainter" {
  +void paint()
  +bool shouldRepaint()
}

"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "project_skripsi::Pages::BuildSchema::choose_parts_widget.dart::WidgetBackgroundPainter"

class "project_skripsi::Pages::BuildSchema::choose_parts_widget.dart::LinePainter" {
  +void paint()
  +bool shouldRepaint()
}

"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "project_skripsi::Pages::BuildSchema::choose_parts_widget.dart::LinePainter"

class "project_skripsi::Pages::BuildSchema::choose_parts_widget.dart::ArrowPainter" {
  +void paint()
  +bool shouldRepaint()
}

"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "project_skripsi::Pages::BuildSchema::choose_parts_widget.dart::ArrowPainter"

class "project_skripsi::Pages::BuildSchema::estimated_price_widget.dart::EstimatedPriceWidget" {
  +State<EstimatedPriceWidget> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "project_skripsi::Pages::BuildSchema::estimated_price_widget.dart::EstimatedPriceWidget"

class "project_skripsi::Pages::BuildSchema::estimated_price_widget.dart::_EstimatedPriceWidgetState" {
  -Widget _getPerformanceBenchmark()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "project_skripsi::Pages::BuildSchema::estimated_price_widget.dart::_EstimatedPriceWidgetState"

class "project_skripsi::Pages::BuildSchema::estimated_price_widget.dart::WidgetPainter" {
  +void paint()
  +bool shouldRepaint()
}

"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "project_skripsi::Pages::BuildSchema::estimated_price_widget.dart::WidgetPainter"

class "project_skripsi::Pages::BuildSchema::estimated_price_widget.dart::ArrowDownPainter" {
  +void paint()
  +bool shouldRepaint()
}

"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "project_skripsi::Pages::BuildSchema::estimated_price_widget.dart::ArrowDownPainter"

class "project_skripsi::Pages::BuildSchema::estimated_price_widget.dart::ArrowUpPainter" {
  +void paint()
  +bool shouldRepaint()
}

"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "project_skripsi::Pages::BuildSchema::estimated_price_widget.dart::ArrowUpPainter"

class "project_skripsi::Pages::BuildSchema::parts_info_widget.dart::PartsInfoWidget" {
  +String id
  +PartEnum partEnum
  +Function toggleMenu
  +State<PartsInfoWidget> createState()
}

"project_skripsi::Pages::BuildSchema::parts_info_widget.dart::PartsInfoWidget" o-- "project_skripsi::Variables::global_variables.dart::PartEnum"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "project_skripsi::Pages::BuildSchema::parts_info_widget.dart::PartsInfoWidget"

class "project_skripsi::Pages::BuildSchema::parts_info_widget.dart::_PartsInfoWidgetState" {
  +num getLowestPrice()
  +Widget createModelInformation()
  +String reformatStringInfo()
  -void _launchUrl()
  -void _addPart()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "project_skripsi::Pages::BuildSchema::parts_info_widget.dart::_PartsInfoWidgetState"

class "project_skripsi::Pages::get_started.dart::GetStartedPage" {
  +State<GetStartedPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "project_skripsi::Pages::get_started.dart::GetStartedPage"

class "project_skripsi::Pages::get_started.dart::_GetStartedPageState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "project_skripsi::Pages::get_started.dart::_GetStartedPageState"

class "project_skripsi::Pages::ImportExport::export_page.dart::ExportPage" {
  +BuildSchemaStateModel buildSchemaStateModel
  +State<ExportPage> createState()
}

"project_skripsi::Pages::ImportExport::export_page.dart::ExportPage" o-- "project_skripsi::Pages::BuildSchema::build_schema_state_model.dart::BuildSchemaStateModel"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "project_skripsi::Pages::ImportExport::export_page.dart::ExportPage"

class "project_skripsi::Pages::ImportExport::export_page.dart::_ExportPageState" {
  +TextEditingController txt
  +void generateExportCode()
  +Widget build()
}

"project_skripsi::Pages::ImportExport::export_page.dart::_ExportPageState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"flutter::src::widgets::framework.dart::State" <|-- "project_skripsi::Pages::ImportExport::export_page.dart::_ExportPageState"

class "project_skripsi::Pages::ImportExport::import_page.dart::ImportPage" {
  +State<ImportPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "project_skripsi::Pages::ImportExport::import_page.dart::ImportPage"

class "project_skripsi::Pages::ImportExport::import_page.dart::_ImportPageState" {
  +TextEditingController userInput
  +Widget build()
}

"project_skripsi::Pages::ImportExport::import_page.dart::_ImportPageState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"flutter::src::widgets::framework.dart::State" <|-- "project_skripsi::Pages::ImportExport::import_page.dart::_ImportPageState"

class "project_skripsi::Pages::ImportExport::import_page_loading.dart::ImportLoadingPage" {
  +String importBuildCode
  +State<ImportLoadingPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "project_skripsi::Pages::ImportExport::import_page_loading.dart::ImportLoadingPage"

class "project_skripsi::Pages::ImportExport::import_page_loading.dart::_ImportLoadingPageState" {
  -bool _isError
  -String _loadingMessage
  +void initState()
  +Future<void> executeAfterBuild()
  -Future<List<dynamic>> _getCpuGraphQL()
  -Future<List<dynamic>> _getMotherboardGraphQL()
  -Future<List<dynamic>> _getGpuGraphQL()
  -Future<List<dynamic>> _getPsuGraphQL()
  -Future<List<dynamic>> _getRamGraphQL()
  -Future<List<dynamic>> _getStorageGraphQL()
  -Future<List<dynamic>> _getCoolerGraphQL()
  -Future<List<dynamic>> _getCaseGraphQL()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "project_skripsi::Pages::ImportExport::import_page_loading.dart::_ImportLoadingPageState"

class "project_skripsi::Pages::RecommendationPage::recommended_form_page.dart::RecommendedFormPage" {
  +State<RecommendedFormPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "project_skripsi::Pages::RecommendationPage::recommended_form_page.dart::RecommendedFormPage"

class "project_skripsi::Pages::RecommendationPage::recommended_form_page.dart::_RecommendedFormPageState" {
  +String tempValue
  +String chipsetValue
  +TextEditingController userInput
  +Widget build()
}

"project_skripsi::Pages::RecommendationPage::recommended_form_page.dart::_RecommendedFormPageState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"flutter::src::widgets::framework.dart::State" <|-- "project_skripsi::Pages::RecommendationPage::recommended_form_page.dart::_RecommendedFormPageState"

class "project_skripsi::Pages::RecommendationPage::recommended_loading_page.dart::RecommendedLoadingPage" {
  +String targetMarketCode
  +double budget
  +String chipset
  +State<RecommendedLoadingPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "project_skripsi::Pages::RecommendationPage::recommended_loading_page.dart::RecommendedLoadingPage"

class "project_skripsi::Pages::RecommendationPage::recommended_loading_page.dart::_RecommendedLoadingPageState" {
  -String _loadingMessage
  -bool _isError
  +List<FullPcPartModel> fullPcPartModelList
  +void initState()
  +Future<void> executeAfterBuild()
  -Future<List<dynamic>> _getCpuGraphQL()
  -Future<List<dynamic>> _getMotherboardGraphQL()
  -Future<List<dynamic>> _getGpuGraphQL()
  -Future<List<dynamic>> _getPsuGraphQL()
  -Future<List<dynamic>> _getRamGraphQL()
  -Future<List<dynamic>> _getStorageGraphQL()
  -Future<List<dynamic>> _getCoolerGraphQL()
  -Future<List<dynamic>> _getCaseGraphQL()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "project_skripsi::Pages::RecommendationPage::recommended_loading_page.dart::_RecommendedLoadingPageState"

class "project_skripsi::UI::cornered_button.dart::CorneredButton" {
  +Widget child
  +Function onPressed
  +Widget build()
}

"project_skripsi::UI::cornered_button.dart::CorneredButton" o-- "flutter::src::widgets::framework.dart::Widget"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "project_skripsi::UI::cornered_button.dart::CorneredButton"

class "project_skripsi::UI::custom_app_bar.dart::CustomAppbar" {
  +bool isTextFieldEnabled
  +bool sideBarVisible
  +bool isExportDisabled
  +List<Widget> children
  +State<CustomAppbar> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "project_skripsi::UI::custom_app_bar.dart::CustomAppbar"

class "project_skripsi::UI::custom_app_bar.dart::_CustomAppbarState" {
  -bool _isMenuButtonPressed
  -void _toggleMenu()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "project_skripsi::UI::custom_app_bar.dart::_CustomAppbarState"

class "project_skripsi::UI::custom_app_bar.dart::MenuButton" {
  +Function onPressed
  +IconData iconData
  +String text
  +BorderRadius? inkwellBorderRadius
  +Widget build()
}

"project_skripsi::UI::custom_app_bar.dart::MenuButton" o-- "flutter::src::widgets::icon_data.dart::IconData"
"project_skripsi::UI::custom_app_bar.dart::MenuButton" o-- "flutter::src::painting::border_radius.dart::BorderRadius"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "project_skripsi::UI::custom_app_bar.dart::MenuButton"

class "project_skripsi::UI::custom_app_bar.dart::CustomPainterAppbar" {
  +void paint()
  +bool shouldRepaint()
}

"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "project_skripsi::UI::custom_app_bar.dart::CustomPainterAppbar"

class "project_skripsi::UI::custom_app_bar.dart::CustomPainterSidebar" {
  +BuildContext context
  +Function toggleSideBar
  +void paint()
  +bool shouldRepaint()
}

"project_skripsi::UI::custom_app_bar.dart::CustomPainterSidebar" o-- "flutter::src::widgets::framework.dart::BuildContext"
"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "project_skripsi::UI::custom_app_bar.dart::CustomPainterSidebar"

class "project_skripsi::UI::custom_app_bar_back.dart::CustomAppBarBack" {
  +String? title
  +List<Widget> children
  +State<CustomAppBarBack> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "project_skripsi::UI::custom_app_bar_back.dart::CustomAppBarBack"

class "project_skripsi::UI::custom_app_bar_back.dart::_CustomAppBarBackState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "project_skripsi::UI::custom_app_bar_back.dart::_CustomAppBarBackState"

class "project_skripsi::UI::custom_container.dart::CustomContainer" {
  +Widget? child
  +double? width
  +double? height
  +EdgeInsets? margin
  +EdgeInsets? padding
  +BorderRadius? borderRadius
  +Widget build()
}

"project_skripsi::UI::custom_container.dart::CustomContainer" o-- "flutter::src::widgets::framework.dart::Widget"
"project_skripsi::UI::custom_container.dart::CustomContainer" o-- "flutter::src::painting::edge_insets.dart::EdgeInsets"
"project_skripsi::UI::custom_container.dart::CustomContainer" o-- "flutter::src::painting::border_radius.dart::BorderRadius"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "project_skripsi::UI::custom_container.dart::CustomContainer"

class "project_skripsi::UI::fade_black_background.dart::FadeBlackBackground" {
  +bool isMenuButtonPressed
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "project_skripsi::UI::fade_black_background.dart::FadeBlackBackground"

class "project_skripsi::UI::palette.dart::Palette" {
  {static} +Color mainBackground
  {static} +Color widgetBackground1
  {static} +Color grey
}

"project_skripsi::UI::palette.dart::Palette" o-- "dart::ui::Color"

class "project_skripsi::UI::palette.dart::TextStyles" {
  {static} +TextStyle interStyle1
  {static} +TextStyle sourceSans3
  {static} +TextStyle interStyleBuildGuidePageButton
  {static} +TextStyle interStyleBuildGuidePageTitle
  {static} +TextStyle interStyleBuildGuidePageDescription
}

"project_skripsi::UI::palette.dart::TextStyles" o-- "flutter::src::painting::text_style.dart::TextStyle"

class "project_skripsi::UI::parts_select_widget.dart::PartsSelectWidget" {
  +String imgPath
  +String name
  +Function function
  +String selectedPart
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "project_skripsi::UI::parts_select_widget.dart::PartsSelectWidget"

class "project_skripsi::UI::titled_container.dart::TitledContainer" {
  +Widget? child
  +bool withBottomRightBorder
  +String? title
  +double? width
  +double? height
  +Widget build()
}

"project_skripsi::UI::titled_container.dart::TitledContainer" o-- "flutter::src::widgets::framework.dart::Widget"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "project_skripsi::UI::titled_container.dart::TitledContainer"

class "project_skripsi::Variables::global_variables.dart::GlobalVariables" {
  {static} +List<PartsSelectModel> partSelectModelList
  {static} +PartEnum convertIndexToEnum()
  {static} +List<dynamic> getQueryList()
  {static} +String getQueryPriceText()
}

class "project_skripsi::Variables::global_variables.dart::PartEnum" {
  +int index
  {static} +List<PartEnum> values
  {static} +PartEnum pcCase
  {static} +PartEnum cooling
  {static} +PartEnum motherboard
  {static} +PartEnum gpu
  {static} +PartEnum cpu
  {static} +PartEnum psu
  {static} +PartEnum ram
  {static} +PartEnum storage
  {static} +PartEnum others
}

"project_skripsi::Variables::global_variables.dart::PartEnum" o-- "project_skripsi::Variables::global_variables.dart::PartEnum"
"dart::core::Enum" <|-- "project_skripsi::Variables::global_variables.dart::PartEnum"

class "project_skripsi::Variables::queries.dart::Queries" {
  {static} +String coolingQuery
  {static} +String coolingQueryById
  {static} +String cpuQuery
  {static} +String cpuQueryById
  {static} +String gpuQuery
  {static} +String gpuQueryById
  {static} +String motherboardQuery
  {static} +String motherboardQueryById
  {static} +String psuQuery
  {static} +String psuQueryById
  {static} +String ramQuery
  {static} +String ramQueryById
  {static} +String storageQuery
  {static} +String storageQueryById
  {static} +String caseQuery
  {static} +String caseQueryById
}

class "project_skripsi::Variables::recommendation_queries.dart::RecommendationQueries" {
  {static} +String cpuQueryByPrice
  {static} +String motherboardQueryBySocket
  {static} +String gpuQueryByPriceAndTargetMarket
  {static} +String psuQueryByWatt
  {static} +String storageQueryBySize
  {static} +String caseQueryAtx
}


@enduml